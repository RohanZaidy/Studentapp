<?php
// CORS for Angular
if ($_SERVER['REQUEST_METHOD'] === 'OPTIONS') {
    header("Access-Control-Allow-Origin: *");
    header("Access-Control-Allow-Methods: POST, GET, PUT, DELETE, OPTIONS");
    header("Access-Control-Allow-Headers: Content-Type");
    http_response_code(200);
    exit();
}

// Standard headers
header("Content-Type: application/json");
header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Methods: GET, POST, PUT, DELETE");

// Connect to database
$conn = mysqli_connect("localhost", "hmftj_interns", "Pakistan@786", "hmftj_interns");

if (!$conn) {
    http_response_code(500);
    echo json_encode(["error" => "Database connection failed"]);
    exit;
}

$method = $_SERVER['REQUEST_METHOD'];
$input = json_decode(file_get_contents("php://input"), true);

// GET - Fetch all students
if ($method === 'GET') {
    $result = $conn->query("SELECT * FROM student ORDER BY id DESC");
    $students = [];

    while ($row = $result->fetch_assoc()) {
        $students[] = $row;
    }

    echo json_encode($students);
    exit;
}

// POST - Add student
if ($method === 'POST') {
    $name = $input['name'] ?? '';
    $s1 = $input['subject1'] ?? null;
    $s2 = $input['subject2'] ?? null;
    $s3 = $input['subject3'] ?? null;

    if (!$name || !is_numeric($s1) || !is_numeric($s2) || !is_numeric($s3)) {
        http_response_code(400);
        echo json_encode(["error" => "Invalid or missing fields"]);
        exit;
    }

    $average = ($s1 + $s2 + $s3) / 3;

    $stmt = $conn->prepare("INSERT INTO student (name, subject1, subject2, subject3, average) VALUES (?, ?, ?, ?, ?)");
    $stmt->bind_param("siiid", $name, $s1, $s2, $s3, $average);

    if ($stmt->execute()) {
        echo json_encode(["message" => "Student added successfully"]);
    } else {
        http_response_code(500);
        echo json_encode(["error" => "Insert failed"]);
    }
    exit;
}

// PUT - Update student
if ($method === 'PUT') {
    $id = $input['id'] ?? '';
    $name = $input['name'] ?? '';
    $s1 = $input['subject1'] ?? null;
    $s2 = $input['subject2'] ?? null;
    $s3 = $input['subject3'] ?? null;

    if (!$id || !$name || !is_numeric($s1) || !is_numeric($s2) || !is_numeric($s3)) {
        http_response_code(400);
        echo json_encode(["error" => "Invalid or missing fields"]);
        exit;
    }

    $average = ($s1 + $s2 + $s3) / 3;

    $stmt = $conn->prepare("UPDATE student SET name = ?, subject1 = ?, subject2 = ?, subject3 = ?, average = ? WHERE id = ?");
    $stmt->bind_param("siiidi", $name, $s1, $s2, $s3, $average, $id);

    if ($stmt->execute()) {
        echo json_encode(["message" => "Student updated successfully"]);
    } else {
        http_response_code(500);
        echo json_encode(["error" => "Update failed"]);
    }
    exit;
}

// DELETE - Delete student
if ($method === 'DELETE') {
    $id = $_GET['id'] ?? 0;

    if (!$id) {
        http_response_code(400);
        echo json_encode(["error" => "Missing student ID"]);
        exit;
    }

    $stmt = $conn->prepare("DELETE FROM student WHERE id = ?");
    $stmt->bind_param("i", $id);

    if ($stmt->execute()) {
        echo json_encode(["message" => "Student deleted"]);
    } else {
        http_response_code(500);
        echo json_encode(["error" => "Delete failed"]);
    }
    exit;
}

// Method not allowed
http_response_code(405);
echo json_encode(["error" => "Method Not Allowed"]);
?>
